// Generated by Haxe 4.3.1
#ifndef INCLUDED_managers_GameSettings
#define INCLUDED_managers_GameSettings

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_c694f3bdf48c9703_8_new)
HX_DECLARE_CLASS1(managers,GameSettings)

namespace managers{


class HXCPP_CLASS_ATTRIBUTES GameSettings_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GameSettings_obj OBJ_;
		GameSettings_obj();

	public:
		enum { _hx_ClassId = 0x09cb447b };

		void __construct( ::Dynamic antialiasing, ::Dynamic allPause);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="managers.GameSettings")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"managers.GameSettings"); }

		inline static ::hx::ObjectPtr< GameSettings_obj > __new( ::Dynamic antialiasing, ::Dynamic allPause) {
			::hx::ObjectPtr< GameSettings_obj > __this = new GameSettings_obj();
			__this->__construct(antialiasing,allPause);
			return __this;
		}

		inline static ::hx::ObjectPtr< GameSettings_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic antialiasing, ::Dynamic allPause) {
			GameSettings_obj *__this = (GameSettings_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GameSettings_obj), false, "managers.GameSettings"));
			*(void **)__this = GameSettings_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_c694f3bdf48c9703_8_new)
HXLINE(  11)		( ( ::managers::GameSettings)(__this) )->allPause = false;
HXLINE(  10)		( ( ::managers::GameSettings)(__this) )->antialiasing = true;
HXLINE(   8)		if (::hx::IsNotNull( antialiasing )) {
HXDLIN(   8)			( ( ::managers::GameSettings)(__this) )->antialiasing = ( (bool)(antialiasing) );
            		}
HXDLIN(   8)		if (::hx::IsNotNull( allPause )) {
HXDLIN(   8)			( ( ::managers::GameSettings)(__this) )->allPause = ( (bool)(allPause) );
            		}
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GameSettings_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GameSettings",15,bb,40,8e); }

		bool antialiasing;
		bool allPause;
};

} // end namespace managers

#endif /* INCLUDED_managers_GameSettings */ 
