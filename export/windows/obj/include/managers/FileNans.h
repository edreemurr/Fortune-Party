// Generated by Haxe 4.3.1
#ifndef INCLUDED_managers_FileNans
#define INCLUDED_managers_FileNans

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(managers,FileNans)

namespace managers{


class HXCPP_CLASS_ATTRIBUTES FileNans_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FileNans_obj OBJ_;
		FileNans_obj();

	public:
		enum { _hx_ClassId = 0x7019765a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="managers.FileNans")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"managers.FileNans"); }

		inline static ::hx::ObjectPtr< FileNans_obj > __new() {
			::hx::ObjectPtr< FileNans_obj > __this = new FileNans_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FileNans_obj > __alloc(::hx::Ctx *_hx_ctx) {
			FileNans_obj *__this = (FileNans_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FileNans_obj), false, "managers.FileNans"));
			*(void **)__this = FileNans_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FileNans_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FileNans",f4,17,f5,3b); }

		static ::String locateSave();
		static ::Dynamic locateSave_dyn();

};

} // end namespace managers

#endif /* INCLUDED_managers_FileNans */ 
