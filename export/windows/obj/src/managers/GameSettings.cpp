// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_managers_GameSettings
#include <managers/GameSettings.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c694f3bdf48c9703_8_new,"managers.GameSettings","new",0x51b3c68f,"managers.GameSettings.new","managers/Settings.hx",8,0xd64e7c32)
namespace managers{

void GameSettings_obj::__construct( ::Dynamic antialiasing, ::Dynamic allPause){
            	HX_STACKFRAME(&_hx_pos_c694f3bdf48c9703_8_new)
HXLINE(  11)		this->allPause = false;
HXLINE(  10)		this->antialiasing = true;
HXLINE(   8)		if (::hx::IsNotNull( antialiasing )) {
HXDLIN(   8)			this->antialiasing = ( (bool)(antialiasing) );
            		}
HXDLIN(   8)		if (::hx::IsNotNull( allPause )) {
HXDLIN(   8)			this->allPause = ( (bool)(allPause) );
            		}
            	}

Dynamic GameSettings_obj::__CreateEmpty() { return new GameSettings_obj; }

void *GameSettings_obj::_hx_vtable = 0;

Dynamic GameSettings_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GameSettings_obj > _hx_result = new GameSettings_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool GameSettings_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x09cb447b;
}


GameSettings_obj::GameSettings_obj()
{
}

::hx::Val GameSettings_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"allPause") ) { return ::hx::Val( allPause ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"antialiasing") ) { return ::hx::Val( antialiasing ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GameSettings_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"allPause") ) { allPause=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"antialiasing") ) { antialiasing=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GameSettings_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("antialiasing",f4,16,b3,48));
	outFields->push(HX_("allPause",15,96,3b,b6));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GameSettings_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(GameSettings_obj,antialiasing),HX_("antialiasing",f4,16,b3,48)},
	{::hx::fsBool,(int)offsetof(GameSettings_obj,allPause),HX_("allPause",15,96,3b,b6)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GameSettings_obj_sStaticStorageInfo = 0;
#endif

static ::String GameSettings_obj_sMemberFields[] = {
	HX_("antialiasing",f4,16,b3,48),
	HX_("allPause",15,96,3b,b6),
	::String(null()) };

::hx::Class GameSettings_obj::__mClass;

void GameSettings_obj::__register()
{
	GameSettings_obj _hx_dummy;
	GameSettings_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("managers.GameSettings",1d,d3,73,3e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GameSettings_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GameSettings_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameSettings_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameSettings_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace managers
